
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'STRING END BOOLEAN VARIABLE IGUAL DIGUAL DIF PROD MOD MAYOR MENOR MAYORIG MENORIG ENTERO MAS INCREMENTO DECREMENTO DIV RESTA LIZQ LDER CIZQ CDER PIZQ PDER AND OR NEGACION COMA ELSEIF POINT IF ELSE FOR WHILE DO BOOL INT DOUBLE STR VAR VOID RETURN IN CONTINUE BREAK PRINT INPUT ADD LEN REMOVE FIRST LAST SLICEfunciones : tipo VARIABLE PIZQ parametros PDER LIZQ algoritmo RETURN valor COMA LDER\n    algoritmo : imprimir\n                    | asignacion \n                    | expresion \n                    | comparacion\n                    | sentenciaIf \n                    | sentenciaFOR\n                    | sentenciaWhile\n                    | empty\n                    | input\n    asignacion : tipo VARIABLE IGUAL expresiones ENDparametros : tipo VARIABLE\n                  | tipo VARIABLE COMA  parametros\n    expresiones : expresion\n                    | comparacion\n                    | BOOLEAN\n                    | opstring\n                    | indexacion\n    string : STRING\n    opstring : string \n                | VARIABLE\n                | string MAS opstring\n    imprimir : PRINT PIZQ expresiones PDER ENDinput : tipo VARIABLE IGUAL INPUT PIZQ PDER ENDexpresion : valor\n                 | lista\n                 | conjuntos\n                 | first\n                 | last\n                 | length\n                 | remove\n                 | add\n    lista : CIZQ elementos CDER END\n    first : VARIABLE POINT FIRST PIZQ PDER\n    last : VARIABLE POINT LAST PIZQ PDER END\n    length : VARIABLE POINT LEN PIZQ PDER END\n    add : VARIABLE POINT ADD PIZQ valor PDER END\n    remove : VARIABLE POINT REMOVE PIZQ valor PDER END\n    conjuntos : LIZQ elementos LDER END\n    elementos : valor\n                 | valor COMA elementos\n    expresion : valor operadorMat expresioncomparacion : expresion operadorComp expresionoperadorMat : MAS \n                    | RESTA\n                    | PROD\n                    | DIV\n                    | MOD\n    operadorComp : MAYOR \n                    | MENOR\n                    | MAYORIG\n                    | MENORIG\n                    | DIGUAL\n                    | DIF\n    tipo : VAR\n            | INT\n            | BOOL\n            | DOUBLE\n            | empty\n            | VOID\n            | STR\n    valor : ENTERO\n             | VARIABLE\n    sentenciaIf : IF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf ENDvarianteIf : ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER\n                    | ELSE LIZQ algoritmo LDER\n                    | ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf\n                    | empty\n    sentenciaFOR : FOR PIZQ parametros PDER LIZQ algoritmo LDER END\n    parametros : inicializacionFor END  comparacion END VARIABLE increDecre\n                    | VARIABLE IN VARIABLE\n    inicializacionFor : VARIABLE IGUAL ENTERO\n                            | INT VARIABLE IGUAL ENTERO\n                            | VAR VARIABLE IGUAL ENTERO\n     increDecre : INCREMENTO\n                    | DECREMENTO\n    sentenciaWhile : WHILE PIZQ comparacion PDER LIZQ algoritmo LDER END\n    sentenciaWhile : DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER END\n    indexacion :  VARIABLE CIZQ  valor CDER  \n    empty :'
    
_lr_action_items = {'VAR':([0,11,25,28,87,89,149,150,151,179,185,],[3,16,16,3,16,3,3,3,3,3,3,]),'INT':([0,11,25,28,87,89,149,150,151,179,185,],[4,17,17,4,17,4,4,4,4,4,4,]),'BOOL':([0,11,25,28,87,89,149,150,151,179,185,],[5,5,5,5,5,5,5,5,5,5,5,]),'DOUBLE':([0,11,25,28,87,89,149,150,151,179,185,],[6,6,6,6,6,6,6,6,6,6,6,]),'VOID':([0,11,25,28,87,89,149,150,151,179,185,],[8,8,8,8,8,8,8,8,8,8,8,]),'STR':([0,11,25,28,87,89,149,150,151,179,185,],[9,9,9,9,9,9,9,9,9,9,9,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,11,12,16,17,19,22,25,28,41,42,46,55,62,64,65,66,67,68,69,70,71,72,73,74,75,76,84,85,86,87,88,89,99,101,122,123,131,132,149,150,151,162,178,179,185,],[-80,10,-55,-56,-57,-58,-59,-60,-61,13,18,23,24,26,30,13,30,79,79,83,-59,90,30,-49,-50,-51,-52,-53,-54,30,-44,-45,-46,-47,-48,79,110,30,13,30,30,79,110,79,79,147,79,30,30,30,30,30,30,30,]),'$end':([1,144,],[0,-1,]),'PIZQ':([10,57,58,59,60,91,92,93,94,95,128,152,171,],[11,85,86,87,88,119,120,121,122,123,143,162,178,]),'IN':([13,],[19,]),'IGUAL':([13,23,24,83,],[20,43,44,101,]),'PDER':([14,18,26,30,32,33,34,35,36,37,38,39,40,45,79,96,97,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,124,126,137,140,141,143,146,147,153,154,158,163,164,169,181,],[21,-12,-71,-63,-25,-26,-27,-28,-29,-30,-31,-32,-62,-13,-63,-43,-42,130,-14,-15,-16,-17,-18,-20,-21,-19,133,134,135,-70,-75,-76,137,138,139,-33,-39,-34,155,156,157,-22,-21,-35,-36,-79,-38,-37,176,183,]),'END':([15,27,29,30,32,33,34,35,36,37,38,39,40,81,82,96,97,98,100,104,105,106,107,108,109,110,111,124,126,127,130,137,138,139,146,147,153,154,155,156,157,158,163,164,166,167,168,170,173,176,184,187,188,],[22,-72,62,-63,-25,-26,-27,-28,-29,-30,-31,-32,-62,-74,-73,-43,-42,124,126,-14,-15,-16,-17,-18,-20,-21,-19,-33,-39,142,145,-34,153,154,-22,-21,-35,-36,163,164,165,-79,-38,-37,-80,174,175,177,-68,180,-66,-65,-67,]),'COMA':([18,40,78,79,102,],[25,-62,99,-63,129,]),'ENTERO':([20,22,28,41,42,43,44,64,65,66,67,68,69,70,71,72,73,74,75,76,84,85,86,88,89,99,101,122,123,132,149,150,151,162,178,179,185,],[27,40,40,40,40,81,82,40,-49,-50,-51,-52,-53,-54,40,-44,-45,-46,-47,-48,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'LIZQ':([21,22,28,61,64,65,66,67,68,69,70,71,72,73,74,75,76,85,86,88,89,101,133,134,135,149,150,151,162,172,178,179,183,185,],[28,42,42,89,42,-49,-50,-51,-52,-53,-54,42,-44,-45,-46,-47,-48,42,42,42,42,42,149,150,151,42,42,42,42,179,42,42,185,42,]),'CIZQ':([22,28,64,65,66,67,68,69,70,71,72,73,74,75,76,85,86,88,89,101,110,149,150,151,162,178,179,185,],[41,41,41,-49,-50,-51,-52,-53,-54,41,-44,-45,-46,-47,-48,41,41,41,41,41,132,41,41,41,41,41,41,41,]),'PRINT':([28,89,149,150,151,179,185,],[57,57,57,57,57,57,57,]),'IF':([28,89,149,150,151,179,185,],[58,58,58,58,58,58,58,]),'FOR':([28,89,149,150,151,179,185,],[59,59,59,59,59,59,59,]),'WHILE':([28,89,136,149,150,151,179,185,],[60,60,152,60,60,60,60,60,]),'DO':([28,89,149,150,151,179,185,],[61,61,61,61,61,61,61,]),'RETURN':([28,30,32,33,34,35,36,37,38,39,40,47,48,49,50,51,52,53,54,55,56,96,97,124,126,137,142,145,153,154,163,164,165,174,175,177,180,],[-80,-63,-25,-26,-27,-28,-29,-30,-31,-32,-62,84,-2,-3,-4,-5,-6,-7,-8,-9,-10,-43,-42,-33,-39,-34,-11,-23,-35,-36,-38,-37,-24,-69,-77,-64,-78,]),'MAS':([30,32,40,109,110,111,],[-63,72,-62,131,-63,-19,]),'RESTA':([30,32,40,110,],[-63,73,-62,-63,]),'PROD':([30,32,40,110,],[-63,74,-62,-63,]),'DIV':([30,32,40,110,],[-63,75,-62,-63,]),'MOD':([30,32,40,110,],[-63,76,-62,-63,]),'MAYOR':([30,31,32,33,34,35,36,37,38,39,40,50,97,104,110,124,126,137,153,154,163,164,],[-63,65,-25,-26,-27,-28,-29,-30,-31,-32,-62,65,-42,65,-63,-33,-39,-34,-35,-36,-38,-37,]),'MENOR':([30,31,32,33,34,35,36,37,38,39,40,50,97,104,110,124,126,137,153,154,163,164,],[-63,66,-25,-26,-27,-28,-29,-30,-31,-32,-62,66,-42,66,-63,-33,-39,-34,-35,-36,-38,-37,]),'MAYORIG':([30,31,32,33,34,35,36,37,38,39,40,50,97,104,110,124,126,137,153,154,163,164,],[-63,67,-25,-26,-27,-28,-29,-30,-31,-32,-62,67,-42,67,-63,-33,-39,-34,-35,-36,-38,-37,]),'MENORIG':([30,31,32,33,34,35,36,37,38,39,40,50,97,104,110,124,126,137,153,154,163,164,],[-63,68,-25,-26,-27,-28,-29,-30,-31,-32,-62,68,-42,68,-63,-33,-39,-34,-35,-36,-38,-37,]),'DIGUAL':([30,31,32,33,34,35,36,37,38,39,40,50,97,104,110,124,126,137,153,154,163,164,],[-63,69,-25,-26,-27,-28,-29,-30,-31,-32,-62,69,-42,69,-63,-33,-39,-34,-35,-36,-38,-37,]),'DIF':([30,31,32,33,34,35,36,37,38,39,40,50,97,104,110,124,126,137,153,154,163,164,],[-63,70,-25,-26,-27,-28,-29,-30,-31,-32,-62,70,-42,70,-63,-33,-39,-34,-35,-36,-38,-37,]),'LDER':([30,32,33,34,35,36,37,38,39,40,48,49,50,51,52,53,54,55,56,78,79,80,89,96,97,115,124,125,126,129,137,142,145,149,150,151,153,154,159,160,161,163,164,165,174,175,177,179,180,182,185,186,],[-63,-25,-26,-27,-28,-29,-30,-31,-32,-62,-2,-3,-4,-5,-6,-7,-8,-9,-10,-40,-63,100,-80,-43,-42,136,-33,-41,-39,144,-34,-11,-23,-80,-80,-80,-35,-36,166,167,168,-38,-37,-24,-69,-77,-64,-80,-78,184,-80,187,]),'POINT':([30,110,],[63,63,]),'CDER':([40,77,78,79,125,148,],[-62,98,-40,-63,-41,158,]),'FIRST':([63,],[91,]),'LAST':([63,],[92,]),'LEN':([63,],[93,]),'REMOVE':([63,],[94,]),'ADD':([63,],[95,]),'BOOLEAN':([85,101,],[106,106,]),'STRING':([85,101,131,],[111,111,111,]),'INCREMENTO':([90,],[117,]),'DECREMENTO':([90,],[118,]),'INPUT':([101,],[128,]),'ELSEIF':([166,187,],[171,171,]),'ELSE':([166,187,],[172,172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'funciones':([0,],[1,]),'tipo':([0,11,25,28,87,89,149,150,151,179,185,],[2,12,12,46,12,46,46,46,46,46,46,]),'empty':([0,11,25,28,87,89,149,150,151,166,179,185,187,],[7,7,7,55,7,55,55,55,55,173,55,55,173,]),'parametros':([11,25,87,],[14,45,113,]),'inicializacionFor':([11,25,87,],[15,15,15,]),'comparacion':([22,28,85,86,88,89,101,149,150,151,162,178,179,185,],[29,51,105,112,114,51,105,51,51,51,169,181,51,51,]),'expresion':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[31,50,96,97,104,31,31,50,104,50,50,50,31,31,50,50,]),'valor':([22,28,41,42,64,71,84,85,86,88,89,99,101,122,123,132,149,150,151,162,178,179,185,],[32,32,78,78,32,32,102,32,32,32,32,78,32,140,141,148,32,32,32,32,32,32,32,]),'lista':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'conjuntos':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'first':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'last':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'length':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'remove':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'add':([22,28,64,71,85,86,88,89,101,149,150,151,162,178,179,185,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'algoritmo':([28,89,149,150,151,179,185,],[47,115,159,160,161,182,186,]),'imprimir':([28,89,149,150,151,179,185,],[48,48,48,48,48,48,48,]),'asignacion':([28,89,149,150,151,179,185,],[49,49,49,49,49,49,49,]),'sentenciaIf':([28,89,149,150,151,179,185,],[52,52,52,52,52,52,52,]),'sentenciaFOR':([28,89,149,150,151,179,185,],[53,53,53,53,53,53,53,]),'sentenciaWhile':([28,89,149,150,151,179,185,],[54,54,54,54,54,54,54,]),'input':([28,89,149,150,151,179,185,],[56,56,56,56,56,56,56,]),'operadorComp':([31,50,104,],[64,64,64,]),'operadorMat':([32,],[71,]),'elementos':([41,42,99,],[77,80,125,]),'expresiones':([85,101,],[103,127,]),'opstring':([85,101,131,],[107,107,146,]),'indexacion':([85,101,],[108,108,]),'string':([85,101,131,],[109,109,109,]),'increDecre':([90,],[116,]),'varianteIf':([166,187,],[170,188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> funciones","S'",1,None,None,None),
  ('funciones -> tipo VARIABLE PIZQ parametros PDER LIZQ algoritmo RETURN valor COMA LDER','funciones',11,'p_funciones','sintaxis_Dart.py',9),
  ('algoritmo -> imprimir','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',13),
  ('algoritmo -> asignacion','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',14),
  ('algoritmo -> expresion','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',15),
  ('algoritmo -> comparacion','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',16),
  ('algoritmo -> sentenciaIf','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',17),
  ('algoritmo -> sentenciaFOR','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',18),
  ('algoritmo -> sentenciaWhile','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',19),
  ('algoritmo -> empty','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',20),
  ('algoritmo -> input','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',21),
  ('asignacion -> tipo VARIABLE IGUAL expresiones END','asignacion',5,'p_asignacion','sintaxis_Dart.py',26),
  ('parametros -> tipo VARIABLE','parametros',2,'p_parametros','sintaxis_Dart.py',30),
  ('parametros -> tipo VARIABLE COMA parametros','parametros',4,'p_parametros','sintaxis_Dart.py',31),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','sintaxis_Dart.py',35),
  ('expresiones -> comparacion','expresiones',1,'p_expresiones','sintaxis_Dart.py',36),
  ('expresiones -> BOOLEAN','expresiones',1,'p_expresiones','sintaxis_Dart.py',37),
  ('expresiones -> opstring','expresiones',1,'p_expresiones','sintaxis_Dart.py',38),
  ('expresiones -> indexacion','expresiones',1,'p_expresiones','sintaxis_Dart.py',39),
  ('string -> STRING','string',1,'p_strings','sintaxis_Dart.py',43),
  ('opstring -> string','opstring',1,'p_operacion_strings','sintaxis_Dart.py',47),
  ('opstring -> VARIABLE','opstring',1,'p_operacion_strings','sintaxis_Dart.py',48),
  ('opstring -> string MAS opstring','opstring',3,'p_operacion_strings','sintaxis_Dart.py',49),
  ('imprimir -> PRINT PIZQ expresiones PDER END','imprimir',5,'p_imprimir','sintaxis_Dart.py',53),
  ('input -> tipo VARIABLE IGUAL INPUT PIZQ PDER END','input',7,'p_input','sintaxis_Dart.py',57),
  ('expresion -> valor','expresion',1,'p_expresion','sintaxis_Dart.py',60),
  ('expresion -> lista','expresion',1,'p_expresion','sintaxis_Dart.py',61),
  ('expresion -> conjuntos','expresion',1,'p_expresion','sintaxis_Dart.py',62),
  ('expresion -> first','expresion',1,'p_expresion','sintaxis_Dart.py',63),
  ('expresion -> last','expresion',1,'p_expresion','sintaxis_Dart.py',64),
  ('expresion -> length','expresion',1,'p_expresion','sintaxis_Dart.py',65),
  ('expresion -> remove','expresion',1,'p_expresion','sintaxis_Dart.py',66),
  ('expresion -> add','expresion',1,'p_expresion','sintaxis_Dart.py',67),
  ('lista -> CIZQ elementos CDER END','lista',4,'p_lista','sintaxis_Dart.py',71),
  ('first -> VARIABLE POINT FIRST PIZQ PDER','first',5,'p_first','sintaxis_Dart.py',75),
  ('last -> VARIABLE POINT LAST PIZQ PDER END','last',6,'p_last','sintaxis_Dart.py',79),
  ('length -> VARIABLE POINT LEN PIZQ PDER END','length',6,'p_length','sintaxis_Dart.py',83),
  ('add -> VARIABLE POINT ADD PIZQ valor PDER END','add',7,'p_add','sintaxis_Dart.py',87),
  ('remove -> VARIABLE POINT REMOVE PIZQ valor PDER END','remove',7,'p_remove','sintaxis_Dart.py',91),
  ('conjuntos -> LIZQ elementos LDER END','conjuntos',4,'p_conjuntos','sintaxis_Dart.py',94),
  ('elementos -> valor','elementos',1,'p_elementos','sintaxis_Dart.py',98),
  ('elementos -> valor COMA elementos','elementos',3,'p_elementos','sintaxis_Dart.py',99),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion_aritmetica','sintaxis_Dart.py',103),
  ('comparacion -> expresion operadorComp expresion','comparacion',3,'p_comparacion','sintaxis_Dart.py',107),
  ('operadorMat -> MAS','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',111),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',112),
  ('operadorMat -> PROD','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',113),
  ('operadorMat -> DIV','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',114),
  ('operadorMat -> MOD','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',115),
  ('operadorComp -> MAYOR','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',119),
  ('operadorComp -> MENOR','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',120),
  ('operadorComp -> MAYORIG','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',121),
  ('operadorComp -> MENORIG','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',122),
  ('operadorComp -> DIGUAL','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',123),
  ('operadorComp -> DIF','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',124),
  ('tipo -> VAR','tipo',1,'p_tipo','sintaxis_Dart.py',128),
  ('tipo -> INT','tipo',1,'p_tipo','sintaxis_Dart.py',129),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintaxis_Dart.py',130),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintaxis_Dart.py',131),
  ('tipo -> empty','tipo',1,'p_tipo','sintaxis_Dart.py',132),
  ('tipo -> VOID','tipo',1,'p_tipo','sintaxis_Dart.py',133),
  ('tipo -> STR','tipo',1,'p_tipo','sintaxis_Dart.py',134),
  ('valor -> ENTERO','valor',1,'p_valor','sintaxis_Dart.py',138),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxis_Dart.py',139),
  ('sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf END','sentenciaIf',9,'p_sentenciaIf','sintaxis_Dart.py',144),
  ('varianteIf -> ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER','varianteIf',7,'p_sentenciaelseif','sintaxis_Dart.py',148),
  ('varianteIf -> ELSE LIZQ algoritmo LDER','varianteIf',4,'p_sentenciaelseif','sintaxis_Dart.py',149),
  ('varianteIf -> ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf','varianteIf',8,'p_sentenciaelseif','sintaxis_Dart.py',150),
  ('varianteIf -> empty','varianteIf',1,'p_sentenciaelseif','sintaxis_Dart.py',151),
  ('sentenciaFOR -> FOR PIZQ parametros PDER LIZQ algoritmo LDER END','sentenciaFOR',8,'p_setenciaFor','sintaxis_Dart.py',156),
  ('parametros -> inicializacionFor END comparacion END VARIABLE increDecre','parametros',6,'p_contenidoFor','sintaxis_Dart.py',160),
  ('parametros -> VARIABLE IN VARIABLE','parametros',3,'p_contenidoFor','sintaxis_Dart.py',161),
  ('inicializacionFor -> VARIABLE IGUAL ENTERO','inicializacionFor',3,'p_iniializacionFor','sintaxis_Dart.py',164),
  ('inicializacionFor -> INT VARIABLE IGUAL ENTERO','inicializacionFor',4,'p_iniializacionFor','sintaxis_Dart.py',165),
  ('inicializacionFor -> VAR VARIABLE IGUAL ENTERO','inicializacionFor',4,'p_iniializacionFor','sintaxis_Dart.py',166),
  ('increDecre -> INCREMENTO','increDecre',1,'p_increDecre','sintaxis_Dart.py',169),
  ('increDecre -> DECREMENTO','increDecre',1,'p_increDecre','sintaxis_Dart.py',170),
  ('sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER END','sentenciaWhile',8,'p_sentenciaWhile','sintaxis_Dart.py',175),
  ('sentenciaWhile -> DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER END','sentenciaWhile',9,'p_sentenciaWhile_do','sintaxis_Dart.py',179),
  ('indexacion -> VARIABLE CIZQ valor CDER','indexacion',4,'p_indexacion','sintaxis_Dart.py',183),
  ('empty -> <empty>','empty',0,'p_empty','sintaxis_Dart.py',187),
]
