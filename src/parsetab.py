
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND BOOL BOOLEAN CDER CIZQ COMA DECREMENTO DIF DIGUAL DIV DO DOUBLE ELSE ELSEIF END ENTERO FIRST FOR IF IGUAL IN INCREMENTO INPUT INT LAST LDER LEN LIZQ MAS MAYOR MAYORIG MENOR MENORIG MOD NEGACION OR PDER PIZQ POINT PRINT PROD REMOVE RESTA RETURN SLICE STR STRING VAR VARIABLE VOID WHILEcodigo : algoritmo\n                | algoritmo codigo\n\n    algoritmo : imprimir\n                    | asignacion \n                    | expresion END\n                    | comparacion END\n                    | sentenciaIf \n                    | sentenciaFOR\n                    | sentenciaWhile\n                    | input\n                    | funciones\n    funciones : tipo VARIABLE PIZQ parametros PDER LIZQ codigo RETURN expresion END LDER\n                | VOID VARIABLE PIZQ parametros PDER LIZQ codigo   LDER\n    asignacion : tipo VARIABLE IGUAL expresiones END\n                    | VARIABLE IGUAL expresiones END\n    parametros : empty \n                  | tipo VARIABLE\n                  | tipo VARIABLE COMA  parametros\n    expresiones : expresion \n                    | comparacion \n                    | BOOLEAN \n                    | opstring \n                    | indexacion \n                    | lista\n                    | conjuntos\n                    | first\n                    | last\n                    | length\n                    | remove\n                    | add\n                    | opLogicas\n    string : STRING\n    opstring : string \n                | VARIABLE\n                | string MAS opstring\n                | VARIABLE MAS opstring\n    imprimir : PRINT PIZQ opstring PDER ENDinput : tipo VARIABLE IGUAL INPUT PIZQ PDER ENDexpresion : valor\n    lista : CIZQ elementos CDER\n    first : VARIABLE POINT FIRST PIZQ PDER\n    last : VARIABLE POINT LAST PIZQ PDER\n    length : VARIABLE POINT LEN PIZQ PDER\n    add : VARIABLE POINT ADD PIZQ valor PDER\n    remove : VARIABLE POINT REMOVE PIZQ valor PDER\n    conjuntos : LIZQ elementos LDER\n    elementos : valor\n                 | valor COMA elementos\n    opLogicas :    terminoLogico\n                    | terminoLogico operadorLog terminoLogico\n                    | terminoLogico operadorLog terminoLogico operadorLog opLogicas\n     terminoLogico : VARIABLE\n                        | BOOLEAN\n                        | PIZQ comparacion PDER\n    expresion : valor operadorMat expresioncomparacion : expresion operadorComp expresionoperadorLog : AND\n                    | OR\n    operadorMat : MAS \n                    | RESTA\n                    | PROD\n                    | DIV\n                    | MOD\n    operadorComp : MAYOR \n                    | MENOR\n                    | MAYORIG\n                    | MENORIG\n                    | DIGUAL\n                    | DIF\n    tipo : VAR\n            | INT\n            | BOOL\n            | DOUBLE\n            | VOID\n            | STR\n    valor : ENTERO\n             | VARIABLE\n    sentenciaIf : IF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf\n                    | IF PIZQ opLogicas PDER LIZQ algoritmo LDER varianteIf\n    varianteIf : ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER\n                    | ELSEIF PIZQ opLogicas PDER LIZQ algoritmo LDER\n                    | ELSE LIZQ algoritmo LDER\n                    | ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf\n                    | ELSEIF PIZQ opLogicas PDER LIZQ algoritmo LDER varianteIf\n                    | empty\n    sentenciaFOR : FOR PIZQ parametrosF PDER LIZQ algoritmo LDER\n    parametrosF : inicializacionFor END  comparacion END VARIABLE increDecre\n                    | inicializacionFor END  opLogicas END VARIABLE increDecre\n                    | VARIABLE IN VARIABLE\n    inicializacionFor : VARIABLE IGUAL ENTERO\n                            | INT VARIABLE IGUAL ENTERO\n                            | VAR VARIABLE IGUAL ENTERO\n     increDecre : INCREMENTO\n                    | DECREMENTO\n    sentenciaWhile : WHILE PIZQ comparacion PDER LIZQ algoritmo LDER\n                        | WHILE PIZQ opLogicas PDER LIZQ algoritmo LDER\n    sentenciaWhile : DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER END\n                        | DO LIZQ algoritmo LDER WHILE PIZQ opLogicas PDER END\n    indexacion :  VARIABLE CIZQ  valor CDER  \n    empty :'
    
_lr_action_items = {'PRINT':([0,2,3,4,7,8,9,10,11,28,36,49,104,124,127,143,144,145,152,153,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[12,12,-3,-4,-7,-8,-9,-10,-11,-5,-6,12,-15,-37,-14,12,12,12,12,12,12,12,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,12,-97,-98,-12,-82,12,12,-80,-81,-83,-84,]),'VARIABLE':([0,2,3,4,7,8,9,10,11,13,20,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,57,74,75,76,87,88,94,95,98,101,102,104,109,110,111,115,116,124,127,138,143,144,145,152,153,158,163,164,166,170,171,176,177,178,187,188,189,192,193,197,200,203,204,211,213,214,215,216,221,224,225,226,229,230,231,232,],[14,14,-3,-4,-7,-8,-9,-10,-11,38,50,-70,-71,-72,-73,-75,-5,52,-64,-65,-66,-67,-68,-69,-6,55,59,52,-59,-60,-61,-62,-63,82,86,82,14,59,52,52,52,118,119,55,55,129,-74,52,-15,142,-57,-58,82,148,-37,-14,52,14,14,14,14,14,14,52,52,142,190,191,82,14,-38,-100,-100,-86,-95,-96,52,-78,-85,-79,-13,82,14,-97,-98,-12,-82,14,14,-80,-81,-83,-84,]),'IF':([0,2,3,4,7,8,9,10,11,28,36,49,104,124,127,143,144,145,152,153,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[16,16,-3,-4,-7,-8,-9,-10,-11,-5,-6,16,-15,-37,-14,16,16,16,16,16,16,16,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,16,-97,-98,-12,-82,16,16,-80,-81,-83,-84,]),'FOR':([0,2,3,4,7,8,9,10,11,28,36,49,104,124,127,143,144,145,152,153,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[17,17,-3,-4,-7,-8,-9,-10,-11,-5,-6,17,-15,-37,-14,17,17,17,17,17,17,17,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,17,-97,-98,-12,-82,17,17,-80,-81,-83,-84,]),'WHILE':([0,2,3,4,7,8,9,10,11,28,36,49,104,122,124,127,143,144,145,152,153,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[18,18,-3,-4,-7,-8,-9,-10,-11,-5,-6,18,-15,154,-37,-14,18,18,18,18,18,18,18,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,18,-97,-98,-12,-82,18,18,-80,-81,-83,-84,]),'DO':([0,2,3,4,7,8,9,10,11,28,36,49,104,124,127,143,144,145,152,153,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[19,19,-3,-4,-7,-8,-9,-10,-11,-5,-6,19,-15,-37,-14,19,19,19,19,19,19,19,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,19,-97,-98,-12,-82,19,19,-80,-81,-83,-84,]),'VOID':([0,2,3,4,7,8,9,10,11,28,36,49,58,92,104,124,127,143,144,145,152,153,157,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[20,20,-3,-4,-7,-8,-9,-10,-11,-5,-6,20,101,101,-15,-37,-14,20,20,20,20,20,101,20,20,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,20,-97,-98,-12,-82,20,20,-80,-81,-83,-84,]),'VAR':([0,2,3,4,7,8,9,10,11,28,36,47,49,58,92,104,124,127,143,144,145,152,153,157,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[21,21,-3,-4,-7,-8,-9,-10,-11,-5,-6,88,21,21,21,-15,-37,-14,21,21,21,21,21,21,21,21,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,21,-97,-98,-12,-82,21,21,-80,-81,-83,-84,]),'INT':([0,2,3,4,7,8,9,10,11,28,36,47,49,58,92,104,124,127,143,144,145,152,153,157,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[22,22,-3,-4,-7,-8,-9,-10,-11,-5,-6,87,22,22,22,-15,-37,-14,22,22,22,22,22,22,22,22,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,22,-97,-98,-12,-82,22,22,-80,-81,-83,-84,]),'BOOL':([0,2,3,4,7,8,9,10,11,28,36,49,58,92,104,124,127,143,144,145,152,153,157,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[23,23,-3,-4,-7,-8,-9,-10,-11,-5,-6,23,23,23,-15,-37,-14,23,23,23,23,23,23,23,23,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,23,-97,-98,-12,-82,23,23,-80,-81,-83,-84,]),'DOUBLE':([0,2,3,4,7,8,9,10,11,28,36,49,58,92,104,124,127,143,144,145,152,153,157,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[24,24,-3,-4,-7,-8,-9,-10,-11,-5,-6,24,24,24,-15,-37,-14,24,24,24,24,24,24,24,24,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,24,-97,-98,-12,-82,24,24,-80,-81,-83,-84,]),'STR':([0,2,3,4,7,8,9,10,11,28,36,49,58,92,104,124,127,143,144,145,152,153,157,158,177,178,187,188,189,192,193,200,203,204,211,214,215,216,221,224,225,226,229,230,231,232,],[25,25,-3,-4,-7,-8,-9,-10,-11,-5,-6,25,25,25,-15,-37,-14,25,25,25,25,25,25,25,25,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,25,-97,-98,-12,-82,25,25,-80,-81,-83,-84,]),'ENTERO':([0,2,3,4,7,8,9,10,11,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,48,49,57,74,75,76,102,104,115,117,124,127,138,143,144,145,150,151,152,153,158,163,164,176,177,178,187,188,189,192,193,197,200,203,204,211,213,214,215,216,221,224,225,226,229,230,231,232,],[26,26,-3,-4,-7,-8,-9,-10,-11,-5,26,-64,-65,-66,-67,-68,-69,-6,26,26,-59,-60,-61,-62,-63,26,26,26,26,26,26,26,26,-15,26,149,-37,-14,26,26,26,26,172,173,26,26,26,26,26,26,26,-38,-100,-100,-86,-95,-96,26,-78,-85,-79,-13,26,26,-97,-98,-12,-82,26,26,-80,-81,-83,-84,]),'$end':([1,2,3,4,7,8,9,10,11,27,28,36,104,124,127,178,187,188,189,192,193,200,203,204,211,215,216,221,224,229,230,231,232,],[0,-1,-3,-4,-7,-8,-9,-10,-11,-2,-5,-6,-15,-37,-14,-38,-100,-100,-86,-95,-96,-78,-85,-79,-13,-97,-98,-12,-82,-80,-81,-83,-84,]),'RETURN':([2,3,4,7,8,9,10,11,27,28,36,104,124,127,178,180,187,188,189,192,193,200,203,204,211,215,216,221,224,229,230,231,232,],[-1,-3,-4,-7,-8,-9,-10,-11,-2,-5,-6,-15,-37,-14,-38,197,-100,-100,-86,-95,-96,-78,-85,-79,-13,-97,-98,-12,-82,-80,-81,-83,-84,]),'LDER':([2,3,4,7,8,9,10,11,26,27,28,36,52,91,104,106,107,124,127,165,167,168,169,174,175,178,187,188,189,192,193,196,200,203,204,211,215,216,217,220,221,224,227,228,229,230,231,232,],[-1,-3,-4,-7,-8,-9,-10,-11,-76,-2,-5,-6,-77,122,-15,-47,139,-37,-14,-48,187,188,189,192,193,-38,-100,-100,-86,-95,-96,211,-78,-85,-79,-13,-97,-98,221,224,-12,-82,229,230,-80,-81,-83,-84,]),'END':([5,6,14,15,26,51,52,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,82,83,85,93,96,125,126,137,139,140,141,142,146,147,149,156,159,172,173,181,182,183,186,198,199,209,210,212,],[28,36,-77,-39,-76,-56,-77,-33,-34,-32,-34,104,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-49,-55,-52,-53,115,124,127,-35,-36,-40,-46,-54,-50,-52,170,171,-90,178,-99,-91,-92,-41,-42,-43,-51,-45,-44,215,216,217,]),'MAYOR':([5,14,15,26,52,59,61,78,81,82,],[30,-77,-39,-76,-77,-77,30,-55,30,-77,]),'MENOR':([5,14,15,26,52,59,61,78,81,82,],[31,-77,-39,-76,-77,-77,31,-55,31,-77,]),'MAYORIG':([5,14,15,26,52,59,61,78,81,82,],[32,-77,-39,-76,-77,-77,32,-55,32,-77,]),'MENORIG':([5,14,15,26,52,59,61,78,81,82,],[33,-77,-39,-76,-77,-77,33,-55,33,-77,]),'DIGUAL':([5,14,15,26,52,59,61,78,81,82,],[34,-77,-39,-76,-77,-77,34,-55,34,-77,]),'DIF':([5,14,15,26,52,59,61,78,81,82,],[35,-77,-39,-76,-77,-77,35,-55,35,-77,]),'PIZQ':([12,16,17,18,38,39,46,48,50,57,97,109,110,111,115,132,133,134,135,136,154,166,176,201,213,],[37,46,47,48,58,76,76,76,92,76,128,76,-57,-58,76,160,161,162,163,164,176,76,76,213,76,]),'IGUAL':([14,38,86,118,119,],[39,57,117,150,151,]),'MAS':([14,15,26,52,54,55,56,59,82,],[-77,41,-76,-77,94,95,-32,95,-77,]),'RESTA':([14,15,26,52,59,82,],[-77,42,-76,-77,-77,-77,]),'PROD':([14,15,26,52,59,82,],[-77,43,-76,-77,-77,-77,]),'DIV':([14,15,26,52,59,82,],[-77,44,-76,-77,-77,-77,]),'MOD':([14,15,26,52,59,82,],[-77,45,-76,-77,-77,-77,]),'PDER':([15,26,51,52,53,54,55,56,58,77,78,79,80,82,83,84,89,90,92,99,100,108,123,125,126,128,129,140,141,142,148,157,160,161,162,179,184,185,186,194,195,205,206,207,208,218,219,],[-39,-76,-56,-77,93,-33,-34,-32,-100,-49,-55,112,113,-52,-53,114,120,121,-100,130,-16,140,155,-35,-36,156,-17,-54,-50,-52,-89,-100,181,182,183,-18,198,199,-51,209,210,-87,-93,-94,-88,222,223,]),'LIZQ':([19,39,57,112,113,114,120,121,130,155,202,222,223,],[49,75,75,143,144,145,152,153,158,177,214,225,226,]),'COMA':([26,52,106,129,],[-76,-77,138,157,]),'CDER':([26,52,105,106,131,165,],[-76,-77,137,-47,159,-48,]),'STRING':([37,39,57,94,95,],[56,56,56,56,56,]),'BOOLEAN':([39,46,48,57,109,110,111,115,166,176,213,],[63,83,83,63,83,-57,-58,83,83,83,83,]),'CIZQ':([39,57,59,],[74,74,102,]),'INPUT':([57,],[97,]),'POINT':([59,],[103,]),'AND':([59,63,77,82,83,140,141,142,],[-52,-53,110,-52,-53,-54,110,-52,]),'OR':([59,63,77,82,83,140,141,142,],[-52,-53,111,-52,-53,-54,111,-52,]),'IN':([86,],[116,]),'FIRST':([103,],[132,]),'LAST':([103,],[133,]),'LEN':([103,],[134,]),'REMOVE':([103,],[135,]),'ADD':([103,],[136,]),'ELSEIF':([187,188,229,230,],[201,201,201,201,]),'ELSE':([187,188,229,230,],[202,202,202,202,]),'INCREMENTO':([190,191,],[206,206,]),'DECREMENTO':([190,191,],[207,207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,2,158,177,],[1,27,180,196,]),'algoritmo':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[2,2,91,167,168,169,174,175,2,2,220,227,228,]),'imprimir':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'asignacion':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[4,4,4,4,4,4,4,4,4,4,4,4,4,]),'expresion':([0,2,29,39,40,46,48,49,57,76,115,143,144,145,152,153,158,176,177,197,213,214,225,226,],[5,5,51,61,78,81,81,5,61,81,81,5,5,5,5,5,5,81,5,212,81,5,5,5,]),'comparacion':([0,2,39,46,48,49,57,76,115,143,144,145,152,153,158,176,177,213,214,225,226,],[6,6,62,79,89,6,62,108,146,6,6,6,6,6,6,194,6,218,6,6,6,]),'sentenciaIf':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'sentenciaFOR':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'sentenciaWhile':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'input':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'funciones':([0,2,49,143,144,145,152,153,158,177,214,225,226,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'tipo':([0,2,49,58,92,143,144,145,152,153,157,158,177,214,225,226,],[13,13,13,98,98,13,13,13,13,13,98,13,13,13,13,13,]),'valor':([0,2,29,39,40,46,48,49,57,74,75,76,102,115,138,143,144,145,152,153,158,163,164,176,177,197,213,214,225,226,],[15,15,15,15,15,15,15,15,15,106,106,15,131,15,106,15,15,15,15,15,15,184,185,15,15,15,15,15,15,15,]),'operadorComp':([5,61,81,],[29,29,29,]),'operadorMat':([15,],[40,]),'opstring':([37,39,57,94,95,],[53,64,64,125,126,]),'string':([37,39,57,94,95,],[54,54,54,54,54,]),'expresiones':([39,57,],[60,96,]),'indexacion':([39,57,],[65,65,]),'lista':([39,57,],[66,66,]),'conjuntos':([39,57,],[67,67,]),'first':([39,57,],[68,68,]),'last':([39,57,],[69,69,]),'length':([39,57,],[70,70,]),'remove':([39,57,],[71,71,]),'add':([39,57,],[72,72,]),'opLogicas':([39,46,48,57,115,166,176,213,],[73,80,90,73,147,186,195,219,]),'terminoLogico':([39,46,48,57,109,115,166,176,213,],[77,77,77,77,141,77,77,77,77,]),'parametrosF':([47,],[84,]),'inicializacionFor':([47,],[85,]),'parametros':([58,92,157,],[99,123,179,]),'empty':([58,92,157,187,188,229,230,],[100,100,100,203,203,203,203,]),'elementos':([74,75,138,],[105,107,165,]),'operadorLog':([77,141,],[109,166,]),'varianteIf':([187,188,229,230,],[200,204,231,232,]),'increDecre':([190,191,],[205,208,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> algoritmo','codigo',1,'p_codigo','sintaxis_Dart.py',9),
  ('codigo -> algoritmo codigo','codigo',2,'p_codigo','sintaxis_Dart.py',10),
  ('algoritmo -> imprimir','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',15),
  ('algoritmo -> asignacion','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',16),
  ('algoritmo -> expresion END','algoritmo',2,'p_algoritmo','sintaxis_Dart.py',17),
  ('algoritmo -> comparacion END','algoritmo',2,'p_algoritmo','sintaxis_Dart.py',18),
  ('algoritmo -> sentenciaIf','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',19),
  ('algoritmo -> sentenciaFOR','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',20),
  ('algoritmo -> sentenciaWhile','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',21),
  ('algoritmo -> input','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',22),
  ('algoritmo -> funciones','algoritmo',1,'p_algoritmo','sintaxis_Dart.py',23),
  ('funciones -> tipo VARIABLE PIZQ parametros PDER LIZQ codigo RETURN expresion END LDER','funciones',11,'p_funciones','sintaxis_Dart.py',26),
  ('funciones -> VOID VARIABLE PIZQ parametros PDER LIZQ codigo LDER','funciones',8,'p_funciones','sintaxis_Dart.py',27),
  ('asignacion -> tipo VARIABLE IGUAL expresiones END','asignacion',5,'p_asignacion','sintaxis_Dart.py',31),
  ('asignacion -> VARIABLE IGUAL expresiones END','asignacion',4,'p_asignacion','sintaxis_Dart.py',32),
  ('parametros -> empty','parametros',1,'p_parametros','sintaxis_Dart.py',36),
  ('parametros -> tipo VARIABLE','parametros',2,'p_parametros','sintaxis_Dart.py',37),
  ('parametros -> tipo VARIABLE COMA parametros','parametros',4,'p_parametros','sintaxis_Dart.py',38),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','sintaxis_Dart.py',42),
  ('expresiones -> comparacion','expresiones',1,'p_expresiones','sintaxis_Dart.py',43),
  ('expresiones -> BOOLEAN','expresiones',1,'p_expresiones','sintaxis_Dart.py',44),
  ('expresiones -> opstring','expresiones',1,'p_expresiones','sintaxis_Dart.py',45),
  ('expresiones -> indexacion','expresiones',1,'p_expresiones','sintaxis_Dart.py',46),
  ('expresiones -> lista','expresiones',1,'p_expresiones','sintaxis_Dart.py',47),
  ('expresiones -> conjuntos','expresiones',1,'p_expresiones','sintaxis_Dart.py',48),
  ('expresiones -> first','expresiones',1,'p_expresiones','sintaxis_Dart.py',49),
  ('expresiones -> last','expresiones',1,'p_expresiones','sintaxis_Dart.py',50),
  ('expresiones -> length','expresiones',1,'p_expresiones','sintaxis_Dart.py',51),
  ('expresiones -> remove','expresiones',1,'p_expresiones','sintaxis_Dart.py',52),
  ('expresiones -> add','expresiones',1,'p_expresiones','sintaxis_Dart.py',53),
  ('expresiones -> opLogicas','expresiones',1,'p_expresiones','sintaxis_Dart.py',54),
  ('string -> STRING','string',1,'p_strings','sintaxis_Dart.py',58),
  ('opstring -> string','opstring',1,'p_operacion_strings','sintaxis_Dart.py',62),
  ('opstring -> VARIABLE','opstring',1,'p_operacion_strings','sintaxis_Dart.py',63),
  ('opstring -> string MAS opstring','opstring',3,'p_operacion_strings','sintaxis_Dart.py',64),
  ('opstring -> VARIABLE MAS opstring','opstring',3,'p_operacion_strings','sintaxis_Dart.py',65),
  ('imprimir -> PRINT PIZQ opstring PDER END','imprimir',5,'p_imprimir','sintaxis_Dart.py',69),
  ('input -> tipo VARIABLE IGUAL INPUT PIZQ PDER END','input',7,'p_input','sintaxis_Dart.py',73),
  ('expresion -> valor','expresion',1,'p_expresion','sintaxis_Dart.py',76),
  ('lista -> CIZQ elementos CDER','lista',3,'p_lista','sintaxis_Dart.py',80),
  ('first -> VARIABLE POINT FIRST PIZQ PDER','first',5,'p_first','sintaxis_Dart.py',84),
  ('last -> VARIABLE POINT LAST PIZQ PDER','last',5,'p_last','sintaxis_Dart.py',88),
  ('length -> VARIABLE POINT LEN PIZQ PDER','length',5,'p_length','sintaxis_Dart.py',92),
  ('add -> VARIABLE POINT ADD PIZQ valor PDER','add',6,'p_add','sintaxis_Dart.py',96),
  ('remove -> VARIABLE POINT REMOVE PIZQ valor PDER','remove',6,'p_remove','sintaxis_Dart.py',100),
  ('conjuntos -> LIZQ elementos LDER','conjuntos',3,'p_conjuntos','sintaxis_Dart.py',103),
  ('elementos -> valor','elementos',1,'p_elementos','sintaxis_Dart.py',107),
  ('elementos -> valor COMA elementos','elementos',3,'p_elementos','sintaxis_Dart.py',108),
  ('opLogicas -> terminoLogico','opLogicas',1,'p_operaciones_logicas','sintaxis_Dart.py',111),
  ('opLogicas -> terminoLogico operadorLog terminoLogico','opLogicas',3,'p_operaciones_logicas','sintaxis_Dart.py',112),
  ('opLogicas -> terminoLogico operadorLog terminoLogico operadorLog opLogicas','opLogicas',5,'p_operaciones_logicas','sintaxis_Dart.py',113),
  ('terminoLogico -> VARIABLE','terminoLogico',1,'p_termino_logico','sintaxis_Dart.py',116),
  ('terminoLogico -> BOOLEAN','terminoLogico',1,'p_termino_logico','sintaxis_Dart.py',117),
  ('terminoLogico -> PIZQ comparacion PDER','terminoLogico',3,'p_termino_logico','sintaxis_Dart.py',118),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion_aritmetica','sintaxis_Dart.py',123),
  ('comparacion -> expresion operadorComp expresion','comparacion',3,'p_comparacion','sintaxis_Dart.py',127),
  ('operadorLog -> AND','operadorLog',1,'p_operadorLog','sintaxis_Dart.py',130),
  ('operadorLog -> OR','operadorLog',1,'p_operadorLog','sintaxis_Dart.py',131),
  ('operadorMat -> MAS','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',134),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',135),
  ('operadorMat -> PROD','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',136),
  ('operadorMat -> DIV','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',137),
  ('operadorMat -> MOD','operadorMat',1,'p_operadorMat','sintaxis_Dart.py',138),
  ('operadorComp -> MAYOR','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',142),
  ('operadorComp -> MENOR','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',143),
  ('operadorComp -> MAYORIG','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',144),
  ('operadorComp -> MENORIG','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',145),
  ('operadorComp -> DIGUAL','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',146),
  ('operadorComp -> DIF','operadorComp',1,'p_operadorComp','sintaxis_Dart.py',147),
  ('tipo -> VAR','tipo',1,'p_tipo','sintaxis_Dart.py',151),
  ('tipo -> INT','tipo',1,'p_tipo','sintaxis_Dart.py',152),
  ('tipo -> BOOL','tipo',1,'p_tipo','sintaxis_Dart.py',153),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','sintaxis_Dart.py',154),
  ('tipo -> VOID','tipo',1,'p_tipo','sintaxis_Dart.py',155),
  ('tipo -> STR','tipo',1,'p_tipo','sintaxis_Dart.py',156),
  ('valor -> ENTERO','valor',1,'p_valor','sintaxis_Dart.py',160),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxis_Dart.py',161),
  ('sentenciaIf -> IF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf','sentenciaIf',8,'p_sentenciaIf','sintaxis_Dart.py',166),
  ('sentenciaIf -> IF PIZQ opLogicas PDER LIZQ algoritmo LDER varianteIf','sentenciaIf',8,'p_sentenciaIf','sintaxis_Dart.py',167),
  ('varianteIf -> ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER','varianteIf',7,'p_sentenciaelseif','sintaxis_Dart.py',172),
  ('varianteIf -> ELSEIF PIZQ opLogicas PDER LIZQ algoritmo LDER','varianteIf',7,'p_sentenciaelseif','sintaxis_Dart.py',173),
  ('varianteIf -> ELSE LIZQ algoritmo LDER','varianteIf',4,'p_sentenciaelseif','sintaxis_Dart.py',174),
  ('varianteIf -> ELSEIF PIZQ comparacion PDER LIZQ algoritmo LDER varianteIf','varianteIf',8,'p_sentenciaelseif','sintaxis_Dart.py',175),
  ('varianteIf -> ELSEIF PIZQ opLogicas PDER LIZQ algoritmo LDER varianteIf','varianteIf',8,'p_sentenciaelseif','sintaxis_Dart.py',176),
  ('varianteIf -> empty','varianteIf',1,'p_sentenciaelseif','sintaxis_Dart.py',177),
  ('sentenciaFOR -> FOR PIZQ parametrosF PDER LIZQ algoritmo LDER','sentenciaFOR',7,'p_setenciaFor','sintaxis_Dart.py',182),
  ('parametrosF -> inicializacionFor END comparacion END VARIABLE increDecre','parametrosF',6,'p_contenidoFor','sintaxis_Dart.py',186),
  ('parametrosF -> inicializacionFor END opLogicas END VARIABLE increDecre','parametrosF',6,'p_contenidoFor','sintaxis_Dart.py',187),
  ('parametrosF -> VARIABLE IN VARIABLE','parametrosF',3,'p_contenidoFor','sintaxis_Dart.py',188),
  ('inicializacionFor -> VARIABLE IGUAL ENTERO','inicializacionFor',3,'p_iniializacionFor','sintaxis_Dart.py',191),
  ('inicializacionFor -> INT VARIABLE IGUAL ENTERO','inicializacionFor',4,'p_iniializacionFor','sintaxis_Dart.py',192),
  ('inicializacionFor -> VAR VARIABLE IGUAL ENTERO','inicializacionFor',4,'p_iniializacionFor','sintaxis_Dart.py',193),
  ('increDecre -> INCREMENTO','increDecre',1,'p_increDecre','sintaxis_Dart.py',196),
  ('increDecre -> DECREMENTO','increDecre',1,'p_increDecre','sintaxis_Dart.py',197),
  ('sentenciaWhile -> WHILE PIZQ comparacion PDER LIZQ algoritmo LDER','sentenciaWhile',7,'p_sentenciaWhile','sintaxis_Dart.py',202),
  ('sentenciaWhile -> WHILE PIZQ opLogicas PDER LIZQ algoritmo LDER','sentenciaWhile',7,'p_sentenciaWhile','sintaxis_Dart.py',203),
  ('sentenciaWhile -> DO LIZQ algoritmo LDER WHILE PIZQ comparacion PDER END','sentenciaWhile',9,'p_sentenciaWhile_do','sintaxis_Dart.py',207),
  ('sentenciaWhile -> DO LIZQ algoritmo LDER WHILE PIZQ opLogicas PDER END','sentenciaWhile',9,'p_sentenciaWhile_do','sintaxis_Dart.py',208),
  ('indexacion -> VARIABLE CIZQ valor CDER','indexacion',4,'p_indexacion','sintaxis_Dart.py',212),
  ('empty -> <empty>','empty',0,'p_empty','sintaxis_Dart.py',216),
]
